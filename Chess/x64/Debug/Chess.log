  RepoPointers.cpp
  Tester.cpp
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(44,1): error C2228: left of '.get_id' must have class/struct/union
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(44,1): message : type is 'T'
          with
          [
              T=ChessPiece *
          ]
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(44,1): message : did you intend to use '->' instead?
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(35): message : while compiling class template member function 'void RepoPointers<ChessPiece *>::add(T *)'
          with
          [
              T=ChessPiece *
          ]
C:\Users\Cristi\source\repos\Chess\Chess\Tester.cpp(244): message : see reference to class template instantiation 'RepoPointers<ChessPiece *>' being compiled
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(44,1): error C2664: 'std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,bool> std::_Hash<std::_Umap_traits<_Kty,ChessPiece**,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::insert(const std::pair<const int,T *> &)': cannot convert argument 1 from 'initializer list' to 'std::initializer_list<_Ty>'
          with
          [
              _Ty=std::pair<const int,ChessPiece **>,
              _Kty=int,
              _Hasher=std::hash<int>,
              _Keyeq=std::equal_to<int>,
              _Alloc=std::allocator<std::pair<const int,ChessPiece **>>,
              T=ChessPiece *
          ]
          and
          [
              _Ty=std::pair<const int,ChessPiece **>
          ]
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(44,21): message : Element '1': no conversion from 'T *' to '_Ty'
          with
          [
              T=ChessPiece *
          ]
          and
          [
              _Ty=std::pair<const int,ChessPiece **>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xhash(1089,10): message : see declaration of 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::insert'
          with
          [
              _Kty=int,
              _Ty=ChessPiece **,
              _Hasher=std::hash<int>,
              _Keyeq=std::equal_to<int>,
              _Alloc=std::allocator<std::pair<const int,ChessPiece **>>
          ]
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(116,1): error C2664: 'std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,bool> std::_Hash<std::_Umap_traits<_Kty,ChessPiece**,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::insert(const std::pair<const int,T *> &)': cannot convert argument 1 from 'initializer list' to 'std::initializer_list<_Ty>'
          with
          [
              _Ty=std::pair<const int,ChessPiece **>,
              _Kty=int,
              _Hasher=std::hash<int>,
              _Keyeq=std::equal_to<int>,
              _Alloc=std::allocator<std::pair<const int,ChessPiece **>>,
              T=ChessPiece *
          ]
          and
          [
              _Ty=std::pair<const int,ChessPiece **>
          ]
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(116,15): message : Element '1': no conversion from 'T *' to '_Ty'
          with
          [
              T=ChessPiece *
          ]
          and
          [
              _Ty=std::pair<const int,ChessPiece **>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xhash(1089,10): message : see declaration of 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::insert'
          with
          [
              _Kty=int,
              _Ty=ChessPiece **,
              _Hasher=std::hash<int>,
              _Keyeq=std::equal_to<int>,
              _Alloc=std::allocator<std::pair<const int,ChessPiece **>>
          ]
C:\Users\Cristi\source\repos\Chess\Chess\RepoPointers.h(99): message : while compiling class template member function 'void RepoPointers<ChessPiece *>::update(T *)'
          with
          [
              T=ChessPiece *
          ]
  Generating Code...
